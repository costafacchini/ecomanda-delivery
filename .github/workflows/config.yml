# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  linter-and-unit:
    if: ${{ !contains(toJSON(github.event.commits.*.message), '[skip-ci]') }}
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    services:
      redis:
        image: redis:8-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    env:
      NODE_ENV: 'test'
      REDIS_URL: 'redis://localhost:6379'
      SECRET: '394ru6gf6gjSsM6'
      DEFAULT_USER: 'user@user.com'
      DEFAULT_PASSWORD: '09876543'
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linter
        run: yarn linter
        timeout-minutes: 5

      - name: Run Node.js unit tests
        run: yarn test:ci --coverageDirectory nodejs-coverage --maxWorkers 4 --testTimeout 10000
        timeout-minutes: 10

      - name: Setup client dependencies
        run: |
          cd client
          yarn install --frozen-lockfile
        timeout-minutes: 5

      - name: Run React unit tests
        run: |
          cd client
          yarn test --coverageDirectory '../react-coverage' --coverage --maxWorkers 4 --testTimeout 10000 --watchAll=false
        env:
          SKIP_PREFLIGHT_CHECK: true
          CI: true
        timeout-minutes: 10

      - name: Build client
        run: |
          cd client
          yarn build
        timeout-minutes: 5

      - name: Upload NodeJS coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: nodejs-coverage
          flags: jestspecs
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

      - name: Upload React coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: react-coverage
          flags: reactspecs
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

  security:
    if: ${{ !contains(toJSON(github.event.commits.*.message), '[skip-ci]') }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run security audit
        run: yarn audit --audit-level moderate
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: |
          if yarn audit --audit-level high; then
            echo "High severity vulnerabilities found!"
            exit 1
          fi
        continue-on-error: true
